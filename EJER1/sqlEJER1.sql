-- MySQL Script generated by MySQL Workbench
-- Sat Feb 26 11:09:00 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema registro_ventas
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `registro_ventas` ;

-- -----------------------------------------------------
-- Schema registro_ventas
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `registro_ventas` DEFAULT CHARACTER SET utf8 ;
USE `registro_ventas` ;

-- -----------------------------------------------------
-- Table `registro_ventas`.`Cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `registro_ventas`.`Cliente` ;

CREATE TABLE IF NOT EXISTS `registro_ventas`.`Cliente` (
  `idCliente` INT NOT NULL,
  `apellidos` VARCHAR(20) NULL,
  `nombres` VARCHAR(45) NULL,
  `direccion` VARCHAR(45) NULL,
  `ciudad` VARCHAR(20) NULL,
  `pais` VARCHAR(20) NULL,
  `celular` CHAR(9) NULL,
  `fax` CHAR(11) NULL,
  `fecha de ingreso` DATE NULL,
  `ind_vigente` VARCHAR(30) NULL,
  PRIMARY KEY (`idCliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `registro_ventas`.`vendedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `registro_ventas`.`vendedor` ;

CREATE TABLE IF NOT EXISTS `registro_ventas`.`vendedor` (
  `id_vendedor` INT NOT NULL,
  `nombre` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`id_vendedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `registro_ventas`.`pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `registro_ventas`.`pedido` ;

CREATE TABLE IF NOT EXISTS `registro_ventas`.`pedido` (
  `id_pedido` INT NOT NULL,
  `fecha` DATE NOT NULL,
  `subtotal` FLOAT NULL,
  `impuesto` FLOAT NULL,
  `total` INT NOT NULL,
  `estado` VARCHAR(45) NOT NULL,
  `Cliente_idCliente` INT NOT NULL,
  `vendedor_id_vendedor` INT NOT NULL,
  PRIMARY KEY (`id_pedido`, `Cliente_idCliente`, `vendedor_id_vendedor`),
  INDEX `fk_pedido_Cliente_idx` (`Cliente_idCliente` ASC) VISIBLE,
  INDEX `fk_pedido_vendedor1_idx` (`vendedor_id_vendedor` ASC) VISIBLE,
  CONSTRAINT `fk_pedido_Cliente`
    FOREIGN KEY (`Cliente_idCliente`)
    REFERENCES `registro_ventas`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_vendedor1`
    FOREIGN KEY (`vendedor_id_vendedor`)
    REFERENCES `registro_ventas`.`vendedor` (`id_vendedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`articulo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `registro_ventas`.`articulo` ;

CREATE TABLE IF NOT EXISTS `registro_ventas`.`articulo` (
  `idarticulo` INT NOT NULL,
  `descrip` VARCHAR(45) NOT NULL,
  `precio uni` INT NOT NULL,
  `stock` INT NOT NULL,
  PRIMARY KEY (`idarticulo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`articulo_has_pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `registro_ventas`.`articulo_has_pedido` ;

CREATE TABLE IF NOT EXISTS `registro_ventas`.`articulo_has_pedido` (
  `articulo_idarticulo` INT NOT NULL,
  `pedido_id_pedido` INT NOT NULL,
  `cantidad` FLOAT NOT NULL,
  `precio` FLOAT NOT NULL,
  `subtotal` FLOAT NULL,
  PRIMARY KEY (`articulo_idarticulo`, `pedido_id_pedido`),
  INDEX `fk_articulo_has_pedido_pedido1_idx` (`pedido_id_pedido` ASC) VISIBLE,
  INDEX `fk_articulo_has_pedido_articulo1_idx` (`articulo_idarticulo` ASC) VISIBLE,
  CONSTRAINT `fk_articulo_has_pedido_articulo1`
    FOREIGN KEY (`articulo_idarticulo`)
    REFERENCES `registro_ventas`.`articulo` (`idarticulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_articulo_has_pedido_pedido1`
    FOREIGN KEY (`pedido_id_pedido`)
    REFERENCES `registro_ventas`.`pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
